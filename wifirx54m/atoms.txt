
# Atomix project, atoms.txt, TODO: insert summary here
# Copyright (c) 2015 Stanford University
# Released under the Apache License v2.0. See the LICENSE file for details.
# Author(s): Manu Bansal


#<command==atom>: <instancename>: <typename>: <core id>
#<command==wire>: <instancename>: <fifo1>: [fifo2]: ...
#<command==pars>: <instancename>: <par1>: [par2]: ...
atom: kk0: BlockKK: 0
atom: kk1: BlockKK: 1
atom: kk2: BlockKK: 2
atom: kk3: BlockKK: 3
#
#----------------
#For init
#----------------
atom: traceReader80Init		: ORILIB_TraceReader80_Init			: 0
atom: jumpInit			: BlockJ					: 0
#
#----------------
#For pkt init
#----------------
atom: traceReader80		: ORILIB_TraceReader80				: 0
atom: pktAlignInit		: ORILIB_PacketSearch_Align_InitPerPacket	: 0
atom: pktDetectInit		: ORILIB_PacketSearch_Detect_InitPerPacket	: 0
atom: data6mBMCacheInit		: ORILIB_ByteCacheInit_C200			: 0
atom: data54mBMCacheInit	: ORILIB_ByteCacheInit_B2048			: 0
atom: jumpPktInit		: BlockJ					: 0
#
#----------------
#For pkt detect
#----------------
atom: pktDetect			: ORILIB_PacketSearch_Detect			: 0
atom: pktDetectDecision		: ORILIB_PacketSearch_Detect_Decision		: 0
atom: agcStateRetainer		: BlockCP2					: 0
#
#----------------
#State drainers
#----------------
atom: alignStateDrainer		: BlockDrain					: 0 
atom: energyStateDrainer	: BlockDrain					: 0 
atom: corrStateDrainer		: BlockDrain					: 0 
atom: agcStateDrainer		: BlockDrain					: 0
atom: plcpOfdmDemodStateDrainer	: BlockDrain					: 0
atom: dataOfdmDemodStateDrainer	: BlockDrain					: 0
#
atom: cfoStateDrainer		: BlockDrain					: 0
atom: chStateDrainer		: BlockDrain					: 0
atom: plcpEqSymsDrainer		: BlockDrain					: 0
atom: dataEqSymsDrainer		: BlockDrain					: 0
atom: datayhstarDrainer		: BlockDrain					: 0
atom: dataOfdmEqStateDrainer	: BlockDrain					: 0
#
atom: data6mVitDecMapDrainer	: BlockDrain					: 0
atom: data6mDecodeDecStDrainer	: BlockDrain					: 0
atom: data6mBmCacheDrainer	: BlockDrain					: 0
#
atom: data54mVitDecMapDrainer	: BlockDrain					: 0
atom: data54mDecodeDecStDrainer	: BlockDrain					: 0
atom: data54mBmCacheDrainer	: BlockDrain					: 0
#
#
#----------------
#For LTF proc 
#----------------
atom: bufAlign			: ORILIB_PacketSearch_Align			: 0
atom: bufCopyTwoWays		: BlockCP2					: 0
atom: bufJoin1			: ORILIB_BufferJoin2To1				: 0
atom: cfoEstLTF			: ORILIB_CFOEstimatorLTF			: 0
atom: cfoStateRetainer		: BlockCP2					: 0
atom: cfoCorrectorG		: ORILIB_CFOCorrectorG				: 0
atom: cfoCorrectorGM		: ORILIB_CFOCorrectorGM				: 0
atom: bufJoin2			: ORILIB_BufferJoin2To1				: 0
atom: chEstLTF			: ORILIB_ChEstimatorLTF				: 0
atom: chStateRetainer		: BlockCP2					: 0
atom: jumpLTFProc		: BlockJ					: 0
#
#
#----------------
#For PLCP decode
#----------------
atom: plcpOfdmDemodPktInit	: ORILIB_OFDMDemodulator_InitPerPacket		: 0
atom: plcpCfoCorrectorG		: ORILIB_CFOCorrectorG				: 0
atom: plcpOfdmDemod		: ORILIB_OFDMDemodulator			: 0
atom: plcpOfdmEq		: ORILIB_OFDMEqualizer				: 0
atom: plcpSoftSlicerBPSK	: ORILIB_SoftDemapperBPSKyhstar			: 0
atom: plcpSoftDeint48		: ORILIB_SoftDeinterleaver48			: 0
atom: plcpSoftBM24		: ORILIB_SoftBranchMetricsR1by2F24		: 0
#
atom: plcpVitDecInit		: ORILIB_ViterbiDecoder_InitOnce		: 0
atom: plcpVitDecGenConfSL	: ORILIB_ViterbiDecoder_GenConfSL		: 0
atom: plcpVitDecStateRetainer	: BlockCP2					: 0
atom: plcpVitDecSingleHT	: ORILIB_ViterbiDecoderVCP			: 0
atom: plcpVitDecWFC		: ORILIB_ViterbiDecoderVCP_WaitForCompletion	: 0
atom: plcpParser		: ORILIB_PLCPParser				: 0
#
#
#---------------------
#For data decode init
#---------------------
atom: data6mVitDecMap		: ORILIB_ViterbiDecodingMap			: 0
atom: data54mVitDecMap		: ORILIB_ViterbiDecodingMap			: 0
#
#------------------------------------------
#For data decode - common for all rates
#------------------------------------------
atom: dataOfdmDemodPktInit	: ORILIB_OFDMDemodulator_InitPerPacket		: 0
atom: dataCfoCorrectorG		: ORILIB_CFOCorrectorG				: 0
atom: dataOfdmDemod		: ORILIB_OFDMDemodulator			: 0
atom: dataOfdmEq		: ORILIB_OFDMEqualizer				: 0
#
#------------------------------------------
#For data decode 6m - upto branch metrics
#------------------------------------------
atom: dataSoftSlicerBPSK	: ORILIB_SoftDemapperBPSKyhstar			: 0
atom: dataSoftDeint48		: ORILIB_SoftDeinterleaver48			: 0
atom: dataSoftBM24		: ORILIB_SoftBranchMetricsR1by2F24		: 0
#
#------------------------------------------
#For data decode 54m - upto branch metrics
#------------------------------------------
atom: dataSoftSlicer64QAM	: ORILIB_SoftSlicer64QAMyhatLUT			: 0
atom: dataSoftDeint288		: ORILIB_SoftDeinterleaver288			: 0
atom: dataSoftDepuncR3by4F216	: ORILIB_SoftDepuncturerR3by4F216		: 0
atom: dataSoftBM216		: ORILIB_SoftBranchMetricsR1by2F216		: 0
#
#---------------------
#For data decode 6m - branch metric caching and retrieval
#---------------------
atom: data6mBmCachePut			: ORILIB_ByteCachePut_a8_C200B48		: 0
atom: data6mVitDecMapRetainer		: BlockCP2					: 0
atom: data6mVitDecHeadStateRetainer	: BlockCP2					: 0
atom: data6mVitDecMidStateRetainer	: BlockCP2					: 0
atom: data6mVitDecTailStateRetainer	: BlockCP2					: 0
atom: data6mVitDecHeadTailStateRetainer	: BlockCP2					: 0
#
#---------------------
#For data decode 54m - branch metric caching and retrieval
#---------------------
atom: data54mBmCachePut			: ORILIB_ByteCachePut_a8_C2048B432		: 0
atom: data54mVitDecMapRetainer		: BlockCP2					: 0
atom: data54mVitDecHeadStateRetainer	: BlockCP2					: 0
atom: data54mVitDecMidStateRetainer	: BlockCP2					: 0
atom: data54mVitDecTailStateRetainer	: BlockCP2					: 0
atom: data54mVitDecHeadTailStateRetainer	: BlockCP2					: 0
#
#-------------------------
#For viterbi decoding 6m
#-------------------------
atom: data6mBmCacheGetHTFrame	: ORILIB_ByteCacheGetFrame_a8_C200		: 0
atom: data6mBmCacheGetHFrame	: ORILIB_ByteCacheGetFrame_a8_C200		: 0
atom: data6mBmCacheGetMFrame	: ORILIB_ByteCacheGetFrame_a8_C200		: 0
atom: data6mBmCacheGetTFrame	: ORILIB_ByteCacheGetFrame_a8_C200		: 0
#
atom: data6mVitDecHeadInit	: ORILIB_ViterbiDecoder_InitOnce		: 0
atom: data6mVitDecHeadGenConfSL	: ORILIB_ViterbiDecoder_GenConfSL		: 0
atom: data6mVitDecMidInit		: ORILIB_ViterbiDecoder_InitOnce		: 0
atom: data6mVitDecMidGenConfSL	: ORILIB_ViterbiDecoder_GenConfSL		: 0
atom: data6mVitDecTailInit	: ORILIB_ViterbiDecoder_InitOnce		: 0
atom: data6mVitDecTailGenConf	: ORILIB_ViterbiDecoder_GenConf			: 0
atom: data6mVitDecHeadTailInit	: ORILIB_ViterbiDecoder_InitOnce		: 0
atom: data6mVitDecHeadTailGenConf	: ORILIB_ViterbiDecoder_GenConf			: 0
#
atom: data6mVitDecHead		: ORILIB_ViterbiDecoderVCP			: 0
atom: data6mVitDecMid		: ORILIB_ViterbiDecoderVCP			: 0
atom: data6mVitDecTail		: ORILIB_ViterbiDecoderVCP			: 0
atom: data6mVitDecHeadTail	: ORILIB_ViterbiDecoderVCP			: 0
#
atom: data6mVitDecWFC		: ORILIB_ViterbiDecoderVCP_WaitForCompletion	: 0
atom: data6mDebugPrintBitBucket	: ORILIB_DebugPrintBitBucket			: 0
#
atom: data6mDecodeDecisionInit	: ORILIB_DataDecodeDecisionInit			: 0
atom: data6mDecodeDecision	: ORILIB_DataDecodeDecision			: 0
#
#-------------------------
#For viterbi decoding 54m
#-------------------------
atom: data54mBmCacheGetHTFrame	: ORILIB_ByteCacheGetFrame_a8_C2048		: 0
atom: data54mBmCacheGetHFrame	: ORILIB_ByteCacheGetFrame_a8_C2048		: 0
atom: data54mBmCacheGetMFrame	: ORILIB_ByteCacheGetFrame_a8_C2048		: 0
atom: data54mBmCacheGetTFrame	: ORILIB_ByteCacheGetFrame_a8_C2048		: 0
#
atom: data54mVitDecHeadInit	: ORILIB_ViterbiDecoder_InitOnce		: 0
atom: data54mVitDecHeadGenConfSL	: ORILIB_ViterbiDecoder_GenConfSL		: 0
atom: data54mVitDecMidInit		: ORILIB_ViterbiDecoder_InitOnce		: 0
atom: data54mVitDecMidGenConfSL	: ORILIB_ViterbiDecoder_GenConfSL		: 0
atom: data54mVitDecTailInit	: ORILIB_ViterbiDecoder_InitOnce		: 0
atom: data54mVitDecTailGenConf	: ORILIB_ViterbiDecoder_GenConf			: 0
atom: data54mVitDecHeadTailInit	: ORILIB_ViterbiDecoder_InitOnce		: 0
atom: data54mVitDecHeadTailGenConf	: ORILIB_ViterbiDecoder_GenConf			: 0
#
atom: data54mVitDecHead		: ORILIB_ViterbiDecoderVCP			: 0
atom: data54mVitDecMid		: ORILIB_ViterbiDecoderVCP			: 0
atom: data54mVitDecTail		: ORILIB_ViterbiDecoderVCP			: 0
atom: data54mVitDecHeadTail	: ORILIB_ViterbiDecoderVCP			: 0
#
atom: data54mVitDecWFC		: ORILIB_ViterbiDecoderVCP_WaitForCompletion	: 0
atom: data54mDebugPrintBitBucket: ORILIB_DebugPrintBitBucket			: 0
#
atom: data54mDecodeDecisionInit	: ORILIB_DataDecodeDecisionInit			: 0
atom: data54mDecodeDecision	: ORILIB_DataDecodeDecision			: 0
#
#--------------------
#After data decoding
#--------------------
#
atom: jumpToFinish		: BlockJ					: 0
atom: jumpToPktInit		: BlockJ					: 0
#
#################
# For the kernels
#################
wire: kk0:ff_kk0
wire: kk1:ff_kk1
wire: kk2:ff_kk2
wire: kk3:ff_kk3
#
#################
# For init
#################
wire: traceReader80Init		:ff_traceReaderState
wire: jumpInit			:ff_kk0
#
#################
# For pkt init 
#################
wire: pktAlignInit		:ff_alignState
wire: pktDetectInit		:ff_energyState:ff_corrState:ff_agcState
wire: agcStateRetainer		:ff_agcState:ff_agcState:ff_agcStateCopy
wire: plcpOfdmDemodPktInit	:ff_plcpOfdmDemodState
wire: dataOfdmDemodPktInit	:ff_dataOfdmDemodState
wire: jumpPktInit		:ff_kk0
#
#################
# For pkt detect
#################
wire: traceReader80		:ff_traceReaderState:ff_traceSampleBuf:ff_traceReaderState
wire: pktDetect			:ff_traceSampleBuf:ff_alignState:ff_energyState:ff_corrState:ff_alignState:ff_energyState:ff_corrState:ff_detectState
#wire: jumpPktDetect		:ff_kk0
wire: agcStateDrainer		:ff_agcState
wire: pktDetectDecision		:ff_detectState:ff_agcState:ff_kk0
#
#################
# For LTF Proc
#################
wire: bufAlign			:ff_traceSampleBuf:ff_alignState:ff_alignedSampleBuf:ff_alignState
wire: bufCopyTwoWays		:ff_alignedSampleBuf:ff_LTFS1:ff_LTFS2
wire: bufJoin1			:ff_LTFS1:ff_LTFS1:ff_joinedLTF1
wire: cfoEstLTF			:ff_joinedLTF1:ff_agcStateCopy:ff_cfoState
wire: cfoStateRetainer		:ff_cfoState:ff_cfoState:ff_cfoStateCopy
wire: cfoCorrectorG		:ff_LTFS2:ff_cfoStateCopy:ff_agcStateCopy:ff_cfoCorrector
wire: cfoCorrectorGM		:ff_LTFS2:ff_cfoStateCopy:ff_agcStateCopy:ff_cfoCorrector
wire: bufJoin2			:ff_cfoCorrector:ff_cfoCorrector:ff_joinedLTF2
wire: chEstLTF			:ff_joinedLTF2:ff_chState
wire: chStateRetainer		:ff_chState:ff_chState:ff_chStateCopy
wire: jumpLTFProc		:ff_kk0
#
#################
# For PLCP Decode
#################
wire: plcpCfoCorrectorG		: ff_alignedSampleBuf:ff_cfoStateCopy:ff_agcStateCopy:ff_cfoCorrectedPLCP
wire: plcpOfdmDemod		: ff_cfoCorrectedPLCP:ff_plcpOfdmDemodState:ff_dataTonesPLCP:ff_pilotTonesPLCP:ff_plcpOfdmDemodState
wire: plcpOfdmEq		: ff_dataTonesPLCP:ff_pilotTonesPLCP:ff_chStateCopy:ff_eqSyms:ff_yhstar:ff_plcpOfdmEqState
wire: plcpSoftSlicerBPSK	: ff_yhstar:ff_plcpOfdmEqState:ff_plcpSoftSlicedBits
wire: plcpSoftDeint48		: ff_plcpSoftSlicedBits:ff_plcpSoftDeintBits
wire: plcpSoftBM24		: ff_plcpSoftDeintBits:ff_plcpSoftBranchMetrics
wire: plcpVitDecInit		: ff_plcpVitDecState
wire: plcpVitDecGenConfSL	: ff_plcpVitDecState:ff_plcpVitDecState
wire: plcpVitDecStateRetainer	: ff_plcpVitDecState:ff_plcpVitDecState:ff_plcpVitDecStateCopy
wire: plcpVitDecSingleHT	: ff_plcpSoftBranchMetrics:ff_plcpVitDecStateCopy:ff_plcpDecodedBits:ff_plcpVitDecWFCState
wire: plcpVitDecWFC		: ff_plcpVitDecWFCState
wire: plcpParser		: ff_plcpDecodedBits:ff_plcpParserState:ff_pktState:ff_kk0
#
#
#####################
# For data demodulate
#####################
wire: dataCfoCorrectorG		: ff_alignedSampleBuf:ff_cfoStateCopy:ff_agcStateCopy:ff_dataCfoCorrected
wire: dataOfdmDemod		: ff_dataCfoCorrected:ff_dataOfdmDemodState:ff_dataTonesData:ff_dataPilotTones:ff_dataOfdmDemodState
wire: dataOfdmEq		: ff_dataTonesData:ff_dataPilotTones:ff_chStateCopy:ff_dataEqSyms:ff_datayhstar:ff_dataOfdmEqState
#
#####################
# For data decode setup 6m
#####################
wire: data6mVitDecMap		:ff_pktState:ff_data6mVitDecMap
#
########################
# For data pre-decode 6m
########################
wire: dataSoftSlicerBPSK	: ff_datayhstar:ff_dataOfdmEqState:ff_dataSoftSlicedBPSKBits
wire: dataSoftDeint48		: ff_dataSoftSlicedBPSKBits:ff_dataSoftDeint48Bits
wire: dataSoftBM24		: ff_dataSoftDeint48Bits:ff_softBM24
#
#
#####################
# For data decode 6m
#####################
wire: data6mBMCacheInit		: ff_data6mBmCache
wire: data6mBmCachePut		: ff_softBM24:ff_data6mBmCache:ff_data6mBmCache
#
wire: data6mBmCacheGetHTFrame	: ff_data6mBmCache:ff_data6mBmCache:ff_data6mBmFrame
wire: data6mBmCacheGetHFrame	: ff_data6mBmCache:ff_data6mBmCache:ff_data6mBmFrame
wire: data6mBmCacheGetMFrame	: ff_data6mBmCache:ff_data6mBmCache:ff_data6mBmFrame
wire: data6mBmCacheGetTFrame	: ff_data6mBmCache:ff_data6mBmCache:ff_data6mBmFrame
#
wire: data6mVitDecHeadInit	: ff_data6mVitDecHeadState
wire: data6mVitDecMidInit	: ff_data6mVitDecMidState
wire: data6mVitDecTailInit	: ff_data6mVitDecTailState
wire: data6mVitDecHeadTailInit	: ff_data6mVitDecHeadTailState
#
wire: data6mVitDecHeadGenConfSL	: ff_data6mVitDecHeadState:ff_data6mVitDecHeadState
wire: data6mVitDecMidGenConfSL	: ff_data6mVitDecMidState:ff_data6mVitDecMidState
wire: data6mVitDecTailGenConf	: ff_data6mVitDecMapCopy:ff_data6mVitDecTailState:ff_data6mVitDecTailState
wire: data6mVitDecHeadTailGenConf	: ff_data6mVitDecMapCopy:ff_data6mVitDecHeadTailState:ff_data6mVitDecHeadTailState
#
wire: data6mVitDecHeadStateRetainer	: ff_data6mVitDecHeadState:ff_data6mVitDecHeadState:ff_data6mVitDecHeadStateCopy
wire: data6mVitDecMidStateRetainer	: ff_data6mVitDecMidState:ff_data6mVitDecMidState:ff_data6mVitDecMidStateCopy
wire: data6mVitDecTailStateRetainer	: ff_data6mVitDecTailState:ff_data6mVitDecTailState:ff_data6mVitDecTailStateCopy
wire: data6mVitDecHeadTailStateRetainer	: ff_data6mVitDecHeadTailState:ff_data6mVitDecHeadTailState:ff_data6mVitDecHeadTailStateCopy
#
wire: data6mVitDecHead		: ff_data6mBmFrame:ff_data6mVitDecHeadStateCopy:ff_data6mDecodedBitsRaw:ff_data6mVitDecWFCState
wire: data6mVitDecMid		: ff_data6mBmFrame:ff_data6mVitDecMidStateCopy:ff_data6mDecodedBitsRaw:ff_data6mVitDecWFCState
wire: data6mVitDecTail		: ff_data6mBmFrame:ff_data6mVitDecTailStateCopy:ff_data6mDecodedBitsRaw:ff_data6mVitDecWFCState
wire: data6mVitDecHeadTail	: ff_data6mBmFrame:ff_data6mVitDecHeadTailStateCopy:ff_data6mDecodedBitsFinished:ff_data6mVitDecWFCState
#
wire: data6mVitDecWFC		: ff_data6mVitDecWFCState
wire: data6mDebugPrintBitBucket	: ff_data6mDecodedBitsRaw
#
wire: data6mVitDecMapRetainer	: ff_data6mVitDecMap:ff_data6mVitDecMap:ff_data6mVitDecMapCopy
wire: data6mDecodeDecisionInit	: ff_data6mDecodeState
wire: data6mDecodeDecision	: ff_data6mVitDecMapCopy:ff_data6mDecodeState:ff_data6mDecodeState:ff_kk0
#---------------------
#####################
# For data decode setup 54m
#####################
wire: data54mVitDecMap		:ff_pktState:ff_data54mVitDecMap
#
########################
# For data pre-decode 54m
########################
wire: dataSoftSlicer64QAM	: ff_dataEqSyms:ff_dataSoftSliced64QAMBits
wire: dataSoftDeint288		: ff_dataSoftSliced64QAMBits:ff_dataSoftDeint288Bits
wire: dataSoftDepuncR3by4F216	: ff_dataSoftDeint288Bits:ff_dataSoftDepunc432Bits
wire: dataSoftBM216		: ff_dataSoftDepunc432Bits: ff_softBM216
#####################
# For data decode 54m
#####################
wire: data54mBMCacheInit	: ff_data54mBmCache
wire: data54mBmCachePut		: ff_softBM216:ff_data54mBmCache:ff_data54mBmCache
#
wire: data54mBmCacheGetHTFrame	: ff_data54mBmCache:ff_data54mBmCache:ff_data54mBmFrame
wire: data54mBmCacheGetHFrame	: ff_data54mBmCache:ff_data54mBmCache:ff_data54mBmFrame
wire: data54mBmCacheGetMFrame	: ff_data54mBmCache:ff_data54mBmCache:ff_data54mBmFrame
wire: data54mBmCacheGetTFrame	: ff_data54mBmCache:ff_data54mBmCache:ff_data54mBmFrame
#
wire: data54mVitDecHeadInit	: ff_data54mVitDecHeadState
wire: data54mVitDecMidInit	: ff_data54mVitDecMidState
wire: data54mVitDecTailInit	: ff_data54mVitDecTailState
wire: data54mVitDecHeadTailInit	: ff_data54mVitDecHeadTailState
#
wire: data54mVitDecHeadGenConfSL	: ff_data54mVitDecHeadState:ff_data54mVitDecHeadState
wire: data54mVitDecMidGenConfSL	: ff_data54mVitDecMidState:ff_data54mVitDecMidState
wire: data54mVitDecTailGenConf	: ff_data54mVitDecMapCopy:ff_data54mVitDecTailState:ff_data54mVitDecTailState
wire: data54mVitDecHeadTailGenConf	: ff_data54mVitDecMapCopy:ff_data54mVitDecHeadTailState:ff_data54mVitDecHeadTailState
#
wire: data54mVitDecHeadStateRetainer	: ff_data54mVitDecHeadState:ff_data54mVitDecHeadState:ff_data54mVitDecHeadStateCopy
wire: data54mVitDecMidStateRetainer	: ff_data54mVitDecMidState:ff_data54mVitDecMidState:ff_data54mVitDecMidStateCopy
wire: data54mVitDecTailStateRetainer	: ff_data54mVitDecTailState:ff_data54mVitDecTailState:ff_data54mVitDecTailStateCopy
wire: data54mVitDecHeadTailStateRetainer	: ff_data54mVitDecHeadTailState:ff_data54mVitDecHeadTailState:ff_data54mVitDecHeadTailStateCopy
#
wire: data54mVitDecHead		: ff_data54mBmFrame:ff_data54mVitDecHeadStateCopy:ff_data54mDecodedBitsRaw:ff_data54mVitDecWFCState
wire: data54mVitDecMid		: ff_data54mBmFrame:ff_data54mVitDecMidStateCopy:ff_data54mDecodedBitsRaw:ff_data54mVitDecWFCState
wire: data54mVitDecTail		: ff_data54mBmFrame:ff_data54mVitDecTailStateCopy:ff_data54mDecodedBitsRaw:ff_data54mVitDecWFCState
wire: data54mVitDecHeadTail	: ff_data54mBmFrame:ff_data54mVitDecHeadTailStateCopy:ff_data54mDecodedBitsFinished:ff_data54mVitDecWFCState
#
wire: data54mVitDecWFC		: ff_data54mVitDecWFCState
wire: data54mDebugPrintBitBucket: ff_data54mDecodedBitsRaw
#
wire: data54mVitDecMapRetainer	: ff_data54mVitDecMap:ff_data54mVitDecMap:ff_data54mVitDecMapCopy
wire: data54mDecodeDecisionInit	: ff_data54mDecodeState
wire: data54mDecodeDecision	: ff_data54mVitDecMapCopy:ff_data54mDecodeState:ff_data54mDecodeState:ff_kk0
#---------------------
#
#---------------------
wire: jumpToFinish	:ff_kk0
wire: jumpToPktInit	:ff_kk0
#---------------------
#
#
#-----------------------
wire: alignStateDrainer		: ff_alignState
wire: energyStateDrainer	: ff_energyState
wire: corrStateDrainer		: ff_corrState
wire: plcpOfdmDemodStateDrainer	: ff_plcpOfdmDemodState
wire: dataOfdmDemodStateDrainer	: ff_dataOfdmDemodState
wire: cfoStateDrainer		: ff_cfoState 
wire: chStateDrainer		: ff_chState
wire: plcpEqSymsDrainer		: ff_eqSyms
wire: dataEqSymsDrainer		: ff_dataEqSyms
wire: dataOfdmEqStateDrainer	: ff_dataOfdmEqState
wire: datayhstarDrainer		: ff_datayhstar
#
#-----------------------
wire: data6mVitDecMapDrainer	: ff_data6mVitDecMap
wire: data6mDecodeDecStDrainer	: ff_data6mDecodeState
wire: data6mBmCacheDrainer	: ff_data6mBmCache
#-----------------------
wire: data54mVitDecMapDrainer	: ff_data54mVitDecMap
wire: data54mDecodeDecStDrainer	: ff_data54mDecodeState
wire: data54mBmCacheDrainer	: ff_data54mBmCache
#-----------------------
#
############################################################################################
conf:jumpInit			:staRxPktInit
conf:jumpPktInit		:staRxPktDetect
#conf:jumpPktDetect		:staRxPktDetect
#conf:pktDetectDecision		:staRxPktInit,staRxPktDetect
conf:pktDetectDecision		:staRxLTFProc,staRxPktDetect
conf:jumpLTFProc		:staRxPLCPDecode
#
#conf:tr_pkt_init_0		:ROUND_UP_N_BYTES_TO_DOUBLE_WORD_MULTIPLE(sizeof(Decision_t))
#conf:tr_pkt_init_1		:ROUND_UP_N_BYTES_TO_DOUBLE_WORD_MULTIPLE(sizeof(Decision_t))
#conf:tr_pkt_init_2		:ROUND_UP_N_BYTES_TO_DOUBLE_WORD_MULTIPLE(sizeof(Decision_t))
#conf:tr_pkt_init_3		:ROUND_UP_N_BYTES_TO_DOUBLE_WORD_MULTIPLE(sizeof(Decision_t))
#conf:cp_1_1			:ROUND_UP_N_BYTES_TO_DOUBLE_WORD_MULTIPLE(sizeof(Decision_t))
conf:traceReader80		:trace_54mbps_skip_400000_ns_10000,10000
conf:bufJoin1			:ROUND_UP_N_BYTES_TO_DOUBLE_WORD_MULTIPLE(sizeof(ORILIB_t_Cplx16Buf80))
conf:bufCopyTwoWays		:ROUND_UP_N_BYTES_TO_DOUBLE_WORD_MULTIPLE(sizeof(ORILIB_t_Cplx16Buf80))
conf:bufJoin2			:ROUND_UP_N_BYTES_TO_DOUBLE_WORD_MULTIPLE(sizeof(ORILIB_t_Cplx16Buf80))
conf:agcStateRetainer		:ROUND_UP_N_BYTES_TO_DOUBLE_WORD_MULTIPLE(sizeof(ORILIB_t_PktAgcState))
conf:cfoStateRetainer		:ROUND_UP_N_BYTES_TO_DOUBLE_WORD_MULTIPLE(sizeof(ORILIB_t_CFOState))
conf:chStateRetainer		:ROUND_UP_N_BYTES_TO_DOUBLE_WORD_MULTIPLE(sizeof(ORILIB_ChEstimatorLTF_t_State))
conf:plcpVitDecInit		:kVCPI_0, VITDEC_HEADTAIL
conf:plcpVitDecGenConfSL	:VITDEC_HEADTAIL, 18
conf: plcpVitDecStateRetainer: ROUND_UP_N_BYTES_TO_DOUBLE_WORD_MULTIPLE(sizeof(ORILIB_t_ViterbiDecoderState))
conf: plcpParser		: staRxFinish, staRxDataDecode6m_setup, staRxDataDecode54m_setup
############################
# conf for 6m data decoding
############################
conf: data6mVitDecMap		: 24
conf: data6mVitDecMapRetainer	: ROUND_UP_N_BYTES_TO_DOUBLE_WORD_MULTIPLE(sizeof(Vitdec_ViterbiDecodingMap))
conf: data6mVitDecHeadStateRetainer: ROUND_UP_N_BYTES_TO_DOUBLE_WORD_MULTIPLE(sizeof(ORILIB_t_ViterbiDecoderState))
conf: data6mVitDecMidStateRetainer: ROUND_UP_N_BYTES_TO_DOUBLE_WORD_MULTIPLE(sizeof(ORILIB_t_ViterbiDecoderState))
conf: data6mVitDecTailStateRetainer: ROUND_UP_N_BYTES_TO_DOUBLE_WORD_MULTIPLE(sizeof(ORILIB_t_ViterbiDecoderState))
conf: data6mVitDecHeadTailStateRetainer: ROUND_UP_N_BYTES_TO_DOUBLE_WORD_MULTIPLE(sizeof(ORILIB_t_ViterbiDecoderState))
conf: data6mBmCacheGetHTFrame	: MAXUINT32, MAXUINT32
conf: data6mBmCacheGetHFrame	: ((24 + 18) * 2),((24-18) * 2)
conf: data6mBmCacheGetMFrame	: ((18 + 24 + 18) * 2),((18 + 24 - 18) * 2)
#tail frame can have at most 18 + 24 + 18 - 1 symbols to decode (otherwise we would
#have issued one more mid convergent). However, for the tail frame, the actual number
#of symbols is variable. So the get frame block provides a special mode to retrieve
#and consume *all* that it has in the cache, whatever that number is.
conf: data6mBmCacheGetTFrame	: MAXUINT32, MAXUINT32
#
conf: data6mVitDecHeadInit	: kVCPI_0, VITDEC_HEADCONVGT
conf: data6mVitDecHeadGenConfSL : VITDEC_HEADCONVGT, 24
conf: data6mVitDecMidInit 	: kVCPI_0, VITDEC_MIDCONVGT
conf: data6mVitDecMidGenConfSL 	: VITDEC_MIDCONVGT, 24
conf: data6mVitDecTailInit 	: kVCPI_0, VITDEC_TAILCONVGT
conf: data6mVitDecTailGenConf 	: VITDEC_TAILCONVGT
conf: data6mVitDecHeadTailInit 	: kVCPI_0, VITDEC_HEADTAIL
conf: data6mVitDecHeadTailGenConf : VITDEC_HEADTAIL
conf: data6mDecodeDecision	: staRxDataDecode6m_c, staRxDataDecode6m_HT, staRxDataDecode6m_H, staRxDataDecode6m_M, staRxDataDecode6m_T, staRxDataDecode6m_f
#
conf: data6mDebugPrintBitBucket	: 2
#
############################
# conf for 54m data decoding
############################
conf: data54mVitDecMap		: 216
conf: data54mVitDecMapRetainer	: ROUND_UP_N_BYTES_TO_DOUBLE_WORD_MULTIPLE(sizeof(Vitdec_ViterbiDecodingMap))
conf: data54mVitDecHeadStateRetainer: ROUND_UP_N_BYTES_TO_DOUBLE_WORD_MULTIPLE(sizeof(ORILIB_t_ViterbiDecoderState))
conf: data54mVitDecMidStateRetainer: ROUND_UP_N_BYTES_TO_DOUBLE_WORD_MULTIPLE(sizeof(ORILIB_t_ViterbiDecoderState))
conf: data54mVitDecTailStateRetainer: ROUND_UP_N_BYTES_TO_DOUBLE_WORD_MULTIPLE(sizeof(ORILIB_t_ViterbiDecoderState))
conf: data54mVitDecHeadTailStateRetainer: ROUND_UP_N_BYTES_TO_DOUBLE_WORD_MULTIPLE(sizeof(ORILIB_t_ViterbiDecoderState))
conf: data54mBmCacheGetHTFrame	: MAXUINT32, MAXUINT32
conf: data54mBmCacheGetHFrame	: ((216 + 18) * 2),((216-18) * 2)
conf: data54mBmCacheGetMFrame	: ((18 + 216 + 18) * 2),((18 + 216 - 18) * 2)
#tail frame can have at most 18 + 216 + 18 - 1 symbols to decode (otherwise we would
#have issued one more mid convergent). However, for the tail frame, the actual number
#of symbols is variable. So the get frame block provides a special mode to retrieve
#and consume *all* that it has in the cache, whatever that number is.
conf: data54mBmCacheGetTFrame	: MAXUINT32, MAXUINT32
#
conf: data54mVitDecHeadInit	: kVCPI_0, VITDEC_HEADCONVGT
conf: data54mVitDecHeadGenConfSL: VITDEC_HEADCONVGT, 216
conf: data54mVitDecMidInit 	: kVCPI_0, VITDEC_MIDCONVGT
conf: data54mVitDecMidGenConfSL : VITDEC_MIDCONVGT, 216
conf: data54mVitDecTailInit 	: kVCPI_0, VITDEC_TAILCONVGT
conf: data54mVitDecTailGenConf 	: VITDEC_TAILCONVGT
conf: data54mVitDecHeadTailInit : kVCPI_0, VITDEC_HEADTAIL
conf: data54mVitDecHeadTailGenConf : VITDEC_HEADTAIL
conf: data54mDecodeDecision	: staRxDataDecode54m_c, staRxDataDecode54m_HT, staRxDataDecode54m_H, staRxDataDecode54m_M, staRxDataDecode54m_T, staRxDataDecode54m_f
#
conf: data54mDebugPrintBitBucket: 16
########################
conf: jumpToFinish		: staRxFinish
conf: jumpToPktInit		: staRxPktInit
#
