
# Atomix project, states.txt, TODO: insert summary here
# Copyright (c) 2015 Stanford University
# Released under the Apache License v2.0. See the LICENSE file for details.
# Author(s): Manu Bansal


#<command==action>:<axnName>:<atomseq>
#<command==state>:<stateName>:<stateNum>:<coreNum>:<action|noaxn>:<atomseq>
#DEPRECATED <command==decway>....
#where atomseq = (atomname;)+ (note that a semicolon must follow each
#atom in the sequence, even the last one.)
#
state : staRxInit
state : staRxPktInit
state : staRxPktDetect
state : staRxLTFProc
state : staRxPLCPDecode
state : staRxDataDecode6m_c
state : staRxDataDecode6m_HT
state : staRxDataDecode6m_H
state : staRxDataDecode6m_M
state : staRxDataDecode6m_T
state : staRxDataDecode6m_f
#
action: axnRxInit0	: traceReader80Init; plcpVitDecInit; plcpVitDecGenConfSL; dataVitDecHeadInit; dataVitDecHeadGenConfSL; dataVitDecMidInit; dataVitDecMidGenConfSL; dataVitDecTailInit; dataVitDecHeadTailInit;
#
action: axnRxPktInit0  	: pktAlignInit; pktDetectInit; plcpOfdmDemodPktInit; dataOfdmDemodPktInit; dataBMCacheInit; dataDecodeDecisionInit;
#
action: axnRxPktDetect0	: traceReader80; pktDetect;
#action: axnRxLTFProc0   : traceReader80; bufAlign; traceReader80; bufAlign; bufCopyTwoWays;bufCopyTwoWays; bufJoin1; bufCp4AgcState; cfoEstLTF; bufCp4CfoState; cfoCorrectorG; cfoCorrectorGM; bufJoin2; chEstLTF;
#
action: axnRxLTFProc0   : traceReader80; bufAlign; traceReader80; bufAlign; bufCopyTwoWays; bufCopyTwoWays; bufJoin1; agcStateRetainer; cfoEstLTF; cfoStateRetainer; agcStateRetainer; cfoCorrectorG; cfoStateRetainer; agcStateRetainer; cfoCorrectorGM; bufJoin2; chEstLTF;
#
action: axnRxPLCPDecode0: traceReader80; bufAlign; cfoStateRetainer; agcStateRetainer; plcpCfoCorrectorG; plcpOfdmDemod; chStateRetainer; plcpOfdmEq; plcpEqSymsDrainer; plcpSoftSlicerBPSK; plcpSoftDeint48; plcpSoftBM24; plcpVitDecStateRetainer; plcpVitDecSingleHT; plcpVitDecWFC; plcpParser; 
#
#
action: axnRxDataDecode6m_c_0: traceReader80; bufAlign; cfoStateRetainer; agcStateRetainer; dataCfoCorrectorG; dataOfdmDemod; chStateRetainer; dataOfdmEq; dataEqSymsDrainer; dataSoftSlicerBPSK; dataSoftDeint48; dataSoftBM24; dataBMCachePut;
#
action: axnRxDataDecode6m_HT_0: traceReader80; bufAlign; cfoStateRetainer; agcStateRetainer; dataCfoCorrectorG; dataOfdmDemod; chStateRetainer; dataOfdmEq; dataEqSymsDrainer; dataSoftSlicerBPSK; dataSoftDeint48; dataSoftBM24; dataBMCachePut; dataBmCacheGetHeadTailFrame; dataVitDecHeadTail;
#
action: axnRxDataDecode6m_H_0: traceReader80; bufAlign; cfoStateRetainer; agcStateRetainer; dataCfoCorrectorG; dataOfdmDemod; chStateRetainer; dataOfdmEq; dataEqSymsDrainer; dataSoftSlicerBPSK; dataSoftDeint48; dataSoftBM24; dataBMCachePut; dataBmCacheGetHeadFrame; dataVitDecHeadStateRetainer; dataVitDecHead;
#
action: axnRxDataDecode6m_M_0: traceReader80; bufAlign; cfoStateRetainer; agcStateRetainer; dataCfoCorrectorG; dataOfdmDemod; chStateRetainer; dataOfdmEq; dataEqSymsDrainer; dataSoftSlicerBPSK; dataSoftDeint48; dataSoftBM24; dataBMCachePut; dataBmCacheGetMidFrame; dataVitDecWFC; dataDebugPrintBitBucket; dataVitDecMidStateRetainer; dataVitDecMid;
#
action: axnRxDataDecode6m_T_0: traceReader80; bufAlign; cfoStateRetainer; agcStateRetainer; dataCfoCorrectorG; dataOfdmDemod; chStateRetainer; dataOfdmEq; dataEqSymsDrainer; dataSoftSlicerBPSK; dataSoftDeint48; dataSoftBM24; dataBMCachePut; dataBmCacheGetTailFrame; dataVitDecWFC; dataDebugPrintBitBucket; dataVitDecTailStateRetainer; dataVitDecTail;
#
action: axnRxDataDecode6m_f_0: dataVitDecWFC; dataDebugPrintBitBucket; alignStateDrainer; energyStateDrainer; corrStateDrainer; agcStateDrainer; plcpOfdmDemodStateDrainer; cfoStateDrainer; chStateDrainer; dataVitDecMapRetainer; dataOfdmDemodStateDrainer; dataDecodeDecisionStateDrainer; dataBMCacheDrainer;
#
statep: staRxInit		: 0: axnRxInit0		: jumpInit; 
statep: staRxInit		: 1: noaxn		: 
statep: staRxInit		: 2: noaxn		: 
statep: staRxInit		: 3: noaxn		: 
#
statep: staRxPktInit		: 0: axnRxPktInit0	: jumpPktInit; 
statep: staRxPktInit		: 1: noaxn  		: 
statep: staRxPktInit		: 2: noaxn  		: 
statep: staRxPktInit		: 3: noaxn  		: 
#
statep: staRxPktDetect		: 0: axnRxPktDetect0	: agcStateDrainer; pktDetectDecision; 
statep: staRxPktDetect		: 1: noaxn  		: 
statep: staRxPktDetect		: 2: noaxn  		: 
statep: staRxPktDetect		: 3: noaxn  		: 
#
statep: staRxLTFProc		: 0: axnRxLTFProc0	: jumpLTFProc; 
statep: staRxLTFProc		: 1: noaxn  		: 
statep: staRxLTFProc		: 2: noaxn  		: 
statep: staRxLTFProc		: 3: noaxn  		: 
#
statep: staRxPLCPDecode 	: 0: axnRxPLCPDecode0	: dataVitDecMapRetainer; dataVitDecTailGenConf; dataVitDecMapRetainer; dataVitDecHeadTailGenConf; dataVitDecMapRetainer; dataDecodeDecision;
statep: staRxPLCPDecode 	: 1: noaxn		:
statep: staRxPLCPDecode 	: 2: noaxn		:
statep: staRxPLCPDecode 	: 3: noaxn		:
#
########################
# per-symbol common
######################
statep: staRxDataDecode6m_c	: 0: axnRxDataDecode6m_c_0 : dataVitDecMapRetainer;dataDecodeDecision;
statep: staRxDataDecode6m_c	: 1: noaxn 	:
statep: staRxDataDecode6m_c	: 2: noaxn 	:
statep: staRxDataDecode6m_c	: 3: noaxn 	:
#
########################
# head-tail decoding
######################
statep: staRxDataDecode6m_HT	: 0: axnRxDataDecode6m_HT_0	: dataVitDecMapRetainer;dataDecodeDecision;
statep: staRxDataDecode6m_HT	: 1: noaxn	:
statep: staRxDataDecode6m_HT	: 2: noaxn	:
statep: staRxDataDecode6m_HT	: 3: noaxn	:
########################
# head decoding
######################
statep: staRxDataDecode6m_H	: 0: axnRxDataDecode6m_H_0	: dataVitDecMapRetainer;dataDecodeDecision;
statep: staRxDataDecode6m_H	: 1: noaxn	:
statep: staRxDataDecode6m_H	: 2: noaxn	:
statep: staRxDataDecode6m_H	: 3: noaxn	:
#
######################
# mid decoding
######################
statep: staRxDataDecode6m_M	: 0: axnRxDataDecode6m_M_0	: dataVitDecMapRetainer;dataDecodeDecision;
statep: staRxDataDecode6m_M	: 1: noaxn	:
statep: staRxDataDecode6m_M	: 2: noaxn	:
statep: staRxDataDecode6m_M	: 3: noaxn	:
#
######################
# tail decoding
######################
statep: staRxDataDecode6m_T	: 0: axnRxDataDecode6m_T_0	: dataVitDecMapRetainer;dataDecodeDecision;
statep: staRxDataDecode6m_T	: 1: noaxn	:
statep: staRxDataDecode6m_T	: 2: noaxn	:
statep: staRxDataDecode6m_T	: 3: noaxn	:
#
######################
# post-decode finish
######################
statep: staRxDataDecode6m_f	: 0: axnRxDataDecode6m_f_0	: jumpDataDecodeFinish;
statep: staRxDataDecode6m_f	: 1: noaxn	:
statep: staRxDataDecode6m_f	: 2: noaxn	:
statep: staRxDataDecode6m_f	: 3: noaxn	:
#
#<command=statei>:<initState>:<iterCount>
statei: staRxInit		: 1
